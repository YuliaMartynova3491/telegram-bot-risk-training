"""
–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∞–≥–µ–Ω—Ç–∞–º–∏.
"""
import logging
from typing import Dict, Any, List, Optional

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from app.config import START_COMMANDS
from app.database.models import get_db
from app.database.operations import (
    get_or_create_user,
    update_user_activity,
    get_all_courses
)
from app.bot.keyboards import (
    get_main_menu_keyboard,
    get_courses_keyboard
)
from app.bot.handlers_menu import show_progress

logger = logging.getLogger(__name__)

async def handle_ask_question(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ —É—Ä–æ–∫—É"."""
    query = update.callback_query
    
    # –ü–æ–ª—É—á–∞–µ–º ID —É—Ä–æ–∫–∞ –∏–∑ callback_data
    lesson_id = int(query.data.replace("ask_question_", ""))
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ handlers_lesson
    try:
        from app.bot.handlers_lesson import handle_user_question
        await handle_user_question(update, context, lesson_id)
    except ImportError:
        # –ï—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        await query.message.edit_text(
            "‚ùì –§—É–Ω–∫—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —É—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º —É—Ä–æ–∫–∞ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É—Ä–æ–∫—É", callback_data=f"lesson_{lesson_id}")]
            ])
        )

async def handle_message_with_question(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ —É—Ä–æ–∫—É."""
    chat_id = update.effective_chat.id
    user = update.effective_user
    message_text = update.message.text.lower()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = get_db()
    db_user = get_or_create_user(
        db,
        telegram_id=user.id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name
    )
    update_user_activity(db, db_user.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if context.user_data.get('waiting_for_question', False):
        # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ handlers_lesson
        try:
            from app.bot.handlers_lesson import process_user_question
            await process_user_question(update, context)
            return
        except ImportError:
            # –ï—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
            await update.message.reply_text(
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º —É—Ä–æ–∫–∞."
            )
            context.user_data['waiting_for_question'] = False
            return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∑–∞–ø—É—Å–∫–∞
    if message_text in [cmd.lower() for cmd in START_COMMANDS]:
        from app.bot.handlers import start
        await start(update, context)
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
    if message_text == "üìö –æ–±—É—á–µ–Ω–∏–µ":
        courses = get_all_courses(db)
        await context.bot.send_message(
            chat_id=chat_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:",
            reply_markup=get_courses_keyboard(courses)
        )
    
    elif message_text == "üìä –º–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å":
        await show_progress(update, context)
    
    elif message_text == "‚ÑπÔ∏è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è":
        instructions = (
            "üìã **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º**\n\n"
            "1Ô∏è‚É£ **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–±—É—á–µ–Ω–∏—è**:\n"
            "   ‚Ä¢ –û–±—É—á–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–æ –Ω–∞ —Ç–µ–º—ã\n"
            "   ‚Ä¢ –ö–∞–∂–¥–∞—è —Ç–µ–º–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Ä–æ–∫–æ–≤\n"
            "   ‚Ä¢ –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–∫–∞ –≤—ã –æ—Ç–≤–µ—Ç–∏—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n\n"
            
            "2Ô∏è‚É£ **–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —É—Ä–æ–∫–æ–≤**:\n"
            "   ‚Ä¢ –£—Ä–æ–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ\n"
            "   ‚Ä¢ –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 80% –≤–æ–ø—Ä–æ—Å–æ–≤\n"
            "   ‚Ä¢ –£—Ä–æ–∫ –º–æ–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ\n\n"
            
            "3Ô∏è‚É£ **–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã**:\n"
            "   ‚Ä¢ –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–∫–∞ –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞\n"
            "   ‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞\n"
            "   ‚Ä¢ –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ\n"
            "   ‚Ä¢ –ü—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—è—Å–Ω–µ–Ω–∏—è\n\n"
            
            "4Ô∏è‚É£ **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏**:\n"
            "   ‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª—É —É—Ä–æ–∫–∞\n"
            "   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ –≤–∞—à–µ–º—É —É—Ä–æ–≤–Ω—é –∑–Ω–∞–Ω–∏–π\n"
            "   ‚Ä¢ –°–ª–æ–∂–Ω–æ—Å—Ç—å –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏\n\n"
            
            "5Ô∏è‚É£ **–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è**:\n"
            "   ‚Ä¢ –í —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å' –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–∫–∏\n"
            "   ‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏\n\n"
            
            "–ñ–µ–ª–∞–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è! üöÄ"
        )
        
        await context.bot.send_message(
            chat_id=chat_id,
            text=instructions,
            parse_mode="Markdown"
        )
    
    else:
        # –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã
        await context.bot.send_message(
            chat_id=chat_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:",
            reply_markup=get_main_menu_keyboard()
        )

def update_callback_handler(original_handler):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ callback –¥–∞–Ω–Ω—ã—Ö
    –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤.
    """
    async def updated_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
        try:
            query = update.callback_query
            callback_data = query.data
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback –∑–∞–ø—Ä–æ—Å–∞
            await query.answer()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ callback –¥–∞–Ω–Ω—ã—Ö
            if callback_data.startswith("ask_question_"):
                await handle_ask_question(update, context)
                return
            
            # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–æ–≤—ã–π —Ç–∏–ø callback, –≤—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            await original_handler(update, context)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")
            import traceback
            logger.error(traceback.format_exc())
            try:
                await query.message.reply_text(
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
                )
            except:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
                logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    
    return updated_handler